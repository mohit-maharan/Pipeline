# ------------------------------------------------------------------------------------------------------
# यह Azure के लिए एक सरल Terraform डिप्लॉयमेंट वर्कफ़्लो है।
#
# यह संस्करण सीखने और सरल डिप्लॉयमेंट के लिए बेहतरीन है।
#
# मुख्य विशेषताएं:
# 1. `init`, `plan`, और `apply` को एक ही, अनुक्रमिक जॉब में जोड़ता है।
# 2. कोड को स्वचालित रूप से चेक आउट करता है और Azure के साथ प्रमाणित होता है।
#
# इस वर्कफ़्लो को चलाने से पहले, सुनिश्चित करें कि निम्नलिखित GitHub secrets कॉन्फ़िगर किए गए हैं:
# - AZURE_CLIENT_ID
# - AZURE_TENANT_ID
# - AZURE_SUBSCRIPTION_ID
#
# यह पाइपलाइन एक self-hosted GitHub Actions runner के लिए डिज़ाइन की गई है।
# ------------------------------------------------------------------------------------------------------

name: Simple Terraform Azure Deployment

on: 
  # मुख्य शाखा में पुश होने पर वर्कफ़्लो को ट्रिगर करें।
  push: 
    branches: 
      - main
  # GitHub Actions UI से वर्कफ़्लो को मैन्युअल रूप से ट्रिगर करने की अनुमति दें।
  workflow_dispatch: 

# वर्कफ़्लो के लिए आवश्यक अनुमतियों को परिभाषित करें।
permissions:
  id-token: write
  contents: read

jobs:
  terraform_deploy:
    # जॉब का नाम, जो GitHub Actions UI में दिखाई देगा।
    name: "Terraform Deploy"
    # उपयोग किए जाने वाले रनर के प्रकार को निर्दिष्ट करें।
    runs-on: self-hosted
    # यह जॉब हर पुश इवेंट पर चलेगी।
    steps:
      - name: "Checkout Repository"
        # कोड को चेक आउट करने के लिए आधिकारिक actions/checkout एक्शन का उपयोग करें।
        uses: actions/checkout@v4
      
      - name: "Azure Login"
        # OIDC के माध्यम से Azure के साथ प्रमाणित करने के लिए आधिकारिक azure/login एक्शन का उपयोग करें।
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Setup Terraform"
        # Terraform इंस्टॉल करने के लिए HashiCorp setup-terraform एक्शन का उपयोग करें।
        uses: hashicorp/setup-terraform@v3.1.2

      - name: "Terraform Init"
        id: init
        # `terraform init` कमांड वर्किंग डायरेक्टरी को इनिशियलाइज़ करता है।
        run: terraform init -backend-config="resource_group_name=ms-rg" -backend-config="storage_account_name=msstg3" -backend-config="container_name=tfstate" -backend-config="key=terraform.tfstate"

      - name: "Terraform Plan"
        id: plan
        # `terraform plan` कमांड एक execution plan बनाता है।
        run: terraform plan

      - name: "Terraform Show"
        # यह `terraform show` कमांड execution plan के मानव-पठनीय आउटपुट को दिखाता है।
        run: terraform show

      - name: "Terraform Apply"
        id: apply
        # `terraform apply` कमांड परिवर्तनों को निष्पादित करता है। `-auto-approve` स्वचालित रूप से उन्हें पुष्टि करता है।
        run: terraform apply -auto-approve
