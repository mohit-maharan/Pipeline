name: Terraform CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  group: github.workflowâˆ’${{ github.ref }}
  cancel-in-progress: true

env:
  TF_WORKING_DIR: . # e.g., ./infra
  ARM_USE_OIDC: "true"
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  terraform_plan:
    name: "Terraform Plan"
    runs-on: self-hosted
    defaults:
      run:
        shell: pwsh
        working-directory:  ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
      - name: Terraform fmt check
        id: fmt
        run: terraform fmt -check -recursive
        # Fail the build if formatting is not correct.
      
      - name: Terraform Init
        id: init
        run: terraform init -input=false
    
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
    
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out=tfplan
    
      - name: Save Terraform Plan to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform_plan
          path: ${{ env.TF_WORKING_DIR }}/tfplan
          retention-days: 1
  securityScan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [terraform_plan]
    steps:
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v5.0.0  
  terraform_apply:
    name: "Terraform Apply"
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: dev
    runs-on: self-hosted
    needs: [securityScan]
    defaults:
      run:
        shell: pwsh
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
  
    - name: Download Terraform Plan Artifact
      uses: actions/download-artifact@v4
      with:
        name: terraform_plan
        path: ${{ env.TF_WORKING_DIR }}
  
    - name: Azure Login (OIDC)
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
    - name: Terraform Init
      id: init
      run: terraform init -input=false
  
    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve tfplan
  
